name: Deploy assets to R2 (public-only)

on:
  push:
    branches: [ "main" ]
    paths: [ "public/**" ]

jobs:
  upload:
    environment: production   # must match your Environment name exactly
    runs-on: ubuntu-latest
    env:
      CLOUDFLARE_ACCOUNT_ID: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}   # <-- set this var
      R2_BUCKET:             ${{ vars.R2_BUCKET }}               # <-- set this var
      R2_ACCESS_KEY_ID:      ${{ secrets.R2_ACCESS_KEY_ID }}
      R2_SECRET_ACCESS_KEY:  ${{ secrets.R2_SECRET_ACCESS_KEY }}

    steps:
      - uses: actions/checkout@v4

      - name: Preflight (vars)
        run: |
          set -euo pipefail
          : "${CLOUDFLARE_ACCOUNT_ID:?CLOUDFLARE_ACCOUNT_ID is empty. Set repo variable.}"
          : "${R2_BUCKET:?R2_BUCKET is empty. Set repo variable.}"
          echo "Endpoint OK: https://${CLOUDFLARE_ACCOUNT_ID}.r2.cloudflarestorage.com"
          echo "Bucket OK:   ${R2_BUCKET}"

      - name: Install rclone
        run: |
          curl -fsSL https://rclone.org/install.sh | sudo -E bash
          rclone version

      - name: Configure rclone for R2
        run: |
          printf '%s\n' \
            "[r2]" \
            "type = s3" \
            "provider = Cloudflare" \
            "access_key_id = ${R2_ACCESS_KEY_ID}" \
            "secret_access_key = ${R2_SECRET_ACCESS_KEY}" \
            "endpoint = https://${CLOUDFLARE_ACCOUNT_ID}.r2.cloudflarestorage.com" \
            "acl = private" \
            > rclone.conf

      - name: Upload public/ to R2 bucket root
        run: rclone --config=rclone.conf copy public r2:${R2_BUCKET} --progress --checksum

      - name: Generate manifest.json (public files only)
        shell: bash
        run: |
          set -euo pipefail
          TMP="$(mktemp)"
          printf '{ "generated_at": "%s", "items": [' "$(date -u +%FT%TZ)" > "$TMP"
          FIRST=1
          while IFS= read -r -d '' f; do
            key="${f#public/}"
            size=$(stat -c%s "$f")
            mime=$(file --brief --mime-type "$f")
            updated=$(date -u -r "$f" +%FT%TZ)
            base=$(basename "$f")
            title="${base%.*}"
            title="$(printf '%s' "$title" | tr '-' ' ' | python3 -c 'import sys;t=sys.stdin.read().strip();print(" ".join(w[:1].upper()+w[1:] for w in t.split()))')"
            category="$(dirname "$key" | cut -d/ -f1)"
            [ "$category" = "." ] && category="root"
            if [ $FIRST -eq 1 ]; then FIRST=0; else echo ',' >> "$TMP"; fi
            printf '  { "path": "%s", "title": "%s", "category": "%s", "mime": "%s", "size": %s, "updated_at": "%s" }' \
                   "$key" "$title" "$category" "$mime" "$size" "$updated" >> "$TMP"
          done < <(find public -type f -print0 | sort -z)
          echo '] }' >> "$TMP"
          rclone --config=rclone.conf copyto "$TMP" "r2:${R2_BUCKET}/manifest.json"

      - name: Summary
        run: |
          echo "Published to: https://assets.lucidseal.org/"
          echo "Manifest:     https://assets.lucidseal.org/manifest.json"
